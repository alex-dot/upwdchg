# Universal Password Changer (UPwdChg) Backend Configuration
# ----------------------------------------------------------

[backend]
# Path to incoming (frontend-to-backend) tokens directory
#tokens_directory = string( min=1, max=256, default='/var/lib/upwdchg/backend/tokens.d' )

# Path to the backend private key (PEM formatted)
# (incoming token decryption and outgoing token signature)
#private_key_file = string( min=1, max=256, default='/etc/upwdchg/backend/private.pem' )

# Path to the backend public key (PEM formatted)
# (outgone token signature verification)
#public_key_file = string( min=1, max=256, default='/etc/upwdchg/backend/public.pem' )

# Path to tokens archive directory; if empty, processed tokens are deleted
# WARNING: use only for debugging purposes!
#archive_directory = string( min=0, max=256, default=None )

[frontend]
# Path to outgoing (backend-to-frontend) tokens directory
#tokens_directory = string( min=1, max=256, default='/var/lib/upwdchg/frontend/tokens.d' )

# Path to the frontend private key (PEM formatted)
# (outgone token decryption)
#private_key_file = string( min=1, max=256, default='/etc/upwdchg/frontend/private.pem' )

# Path to the frontend public key (PEM formatted)
# (outgoing token encryption and incoming token signature verification)
#public_key_file = string( min=1, max=256, default='/etc/upwdchg/frontend/public.pem' )

[daemon]
# Path to token processing plugins directory
#plugins_directory = string( min=1, max=256, default='/etc/upwdchg/daemon/plugins/%{type}.d' )

# Comma-separated list of allowed token types
# NOTE: among 'password-nonce-request', 'password-change' or 'password-reset'
#allowed_types = string( min=1, max=256, default='password-change' )

# Processing interval, in seconds
#process_interval = integer( min=1, default=60 )

# Maximum quantity of tokens expected per processing interval (before the daemon exits); if zero, ignored
#max_tokens = integer( min=0, default=100 )

# Maximum tolerated processing errors (before the daemon exits); if zero, ignored
#max_errors = integer( min=0, default=1 )

[email]
# Administrator e-mail address to send token processing output; if empty, no messages are sent
#admin_address = string( min=0, max=256, default='Administrator <root@localhost.localdomain>' )

# Whether to send token processing output to corresponding user
#user_send = boolean( default=False )

# Domain part to add to usernames
#user_domain = string( min=0, max=256, default=None )

# Use LDAP for user's e-mail address
#user_address_from_ldap = boolean( default=False )

# Sender e-mail address
#sender_address = string( min=1, max=256, default='UPwdChg <upwdchg@localhost.localdomain>' )

# Message subject's prefix
#subject_prefix = string( min=0, max=256, default='[UPWDCHG] ' )

# Path to message body template; if empty, raw processing output is sent
# NOTE: the %{OUTPUT} placeholder shall be replaced by the actual processing output
#body_template_file = string( min=0, max=256, default='/etc/upwdchg/backend/upwdchg.email.template' )

# Path to the 'sendmail' binary
#sendmail_binary = string( min=1, max=256, default='/usr/sbin/sendmail' )

[ldap]
# URI of the ldap service
#uri = string( min=0, max=256, default='ldap://ldap.example.org:389' )

# DN of the user doing the search
#bind_dn = string( min=0, max=256, default='cn=admin,dc=example,dc=org'  )

# Password for the user doing the search, prefix with 'file://' to get password from specified file
#bind_pwd = string( min=0, max=256, default='' )

# User DN; if empty, DN search is performed (see below)
#user_dn = string( min=0, max=256, default='uid=%{USERNAME},ou=users,dc=example,dc=org' )

# Search DN to look for user
#search_dn = string( min=0, max=256, default='ou=users,dc=example,dc=org' )

# Search scope
#search_scope = option( ldap.SCOPE_BASELEVEL, ldap.SCOPE_ONELEVEL, ldap.SCOPE_SUBTREE, default=ldap.SCOPE_ONELEVEL )

# Filter to use, by default filter by username and objectclass
#search_filter = string( min=0, max=256, default='(&(objectClass=inetOrgPerson)(uid=%{USERNAME}))' )

# Attribute to use for the email-address
#email_attribute = string( min=0, max=256, default='mail' )
