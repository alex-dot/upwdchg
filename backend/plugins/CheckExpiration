#!/usr/bin/env python
# -*- mode:python; tab-width:4; c-basic-offset:4; intent-tabs-mode:nil; -*-
# ex: filetype=python tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent smartindent

#
# Universal Password Changer (UPwdChg)
# Copyright (C) 2014-2018 Cedric Dufour <http://cedric.dufour.name>
# Author: Cedric Dufour <http://cedric.dufour.name>
#
# The Universal Password Changer (UPwdChg) is free software:
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation, Version 3.
#
# The Universal Password Changer (UPwdChg) is distributed in the hope
# that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU General Public License for more details.
#
# SPDX-License-Identifier: GPL-3.0
# License-Filename: LICENSE/GPL-3.0.txt
#

# Modules
from UPwdChg import TokenPlugin

# Parameters
UPWDCHG_PLUGIN_CRITICAL=True
UPWDCHG_PLUGIN_DEBUG=TokenPlugin.DEBUG_INFO

# Plugin
class CheckExpiration(TokenPlugin):

    def __init__(self):
        global UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG
        TokenPlugin.__init__(self, 'CheckExpiration', UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)

    def process(self):
        # Get token (data)
        oToken = self._getToken()

        # Check expiration
        try:
            if oToken.checkData_Expiration() != 0:
                self._DEBUG('Token has expired; %s' % oToken['expiration'])
                self._EXIT_ERROR('Internal error; please contact your system administrator')
            self._DEBUG('Valid expiration', TokenPlugin.DEBUG_NOTICE)
        except Exception as e:
            self._DEBUG('Failed to check token expiration; %s' % str(e))
            self._EXIT_ERROR('Internal error; please contact your system administrator')

        # Done
        self._EXIT_OK('Valid expiration date/time')

# Process
CheckExpiration().process()
