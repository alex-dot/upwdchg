--- 2/SynchGroupsLdap
+++ 3/SynchGroupsLdap
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- mode:python; tab-width:4; c-basic-offset:4; intent-tabs-mode:nil; coding:utf-8 -*-
 # ex: filetype=python tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent smartindent
 
@@ -24,8 +24,22 @@
-# Modules
-# ... deb: python-ldap
+#------------------------------------------------------------------------------
+# DEPENDENCIES
+#------------------------------------------------------------------------------
+
+# UPwdChg
 from UPwdChg import TokenPlugin
+
+# Extra
+# ... deb: python3-ldap
 import ldap
 import ldap.modlist
+
+# Standard
 import re
 
-# Parameters
+
+#------------------------------------------------------------------------------
+# CONFIGURATION
+#------------------------------------------------------------------------------
+
+# UPwdChg
+UPWDCHG_PLUGIN_NAME='SynchGroupsLdap'
@@ -70,17 +84,15 @@
-# Plugin
+
+#------------------------------------------------------------------------------
+# PLUGIN
+#------------------------------------------------------------------------------
+
 class SynchGroupsLdap(TokenPlugin):
 
     def __init__(self):
-        global UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG
-        TokenPlugin.__init__(self, 'SynchGroupsLdap', UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
+        TokenPlugin.__init__(self, UPWDCHG_PLUGIN_NAME, UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
         # ... fields
         self.__reLdapVariables = re.compile('%{LDAP:[^}]*}')
 
 
     def __ldapSrcBind(self):
-        global \
-            UPWDCHG_PLUGIN_LDAP_SRC_URI, \
-            UPWDCHG_PLUGIN_LDAP_SRC_ADMIN_DN, \
-            UPWDCHG_PLUGIN_LDAP_SRC_ADMIN_PWD
-
-        # Check parameters
+        # Check configuration
@@ -132,20 +143,14 @@
 
 
     def __ldapSrcGetGroups(self, oLdap):
-        global \
-            UPWDCHG_PLUGIN_LDAP_SRC_GROUP_SEARCH_DN, \
-            UPWDCHG_PLUGIN_LDAP_SRC_GROUP_SEARCH_SCOPE, \
-            UPWDCHG_PLUGIN_LDAP_SRC_GROUP_SEARCH_FILTER, \
-            UPWDCHG_PLUGIN_LDAP_SRC_GROUP_ATTR_NAME
-
-        # Return variable
-        dGroups = dict()
-
-        # Check parameters
+        # Check configuration
         if not UPWDCHG_PLUGIN_LDAP_SRC_GROUP_SEARCH_DN:
             self._DEBUG('Missing (source LDAP) group search base (DN)')
             self._EXIT_ERROR('Internal error; please contact your system administrator')
 
+        # Return variable
+        dGroups = dict()
+
         # Retrieve groups
 
         # ... groups
@@ -157,7 +162,7 @@
                 attrlist=[UPWDCHG_PLUGIN_LDAP_SRC_GROUP_ATTR_NAME], attrsonly=0
                 )
             for tLdapResult in lLdapResults:
-                dGroups[ tLdapResult[1][UPWDCHG_PLUGIN_LDAP_SRC_GROUP_ATTR_NAME][0] ] = tLdapResult[0];
+                dGroups[ tLdapResult[1][UPWDCHG_PLUGIN_LDAP_SRC_GROUP_ATTR_NAME][0].decode('utf-8') ] = tLdapResult[0];
             self._DEBUG('Successfully retrieved groups from (source LDAP) server:\n%s' % str(dGroups), TokenPlugin.DEBUG_TRACE)
         except Exception as e:
             self._DEBUG('Failed to retrieve groups from (source LDAP) server; %s' % str(e))
@@ -168,7 +173,6 @@
 
 
     def __ldapSrcGetAttributes(self, oLdap, sGroupDn):
-
         # Return variable
         dAttrs = dict()
 
@@ -197,7 +201,6 @@
 
 
     def __ldapSrcUnbind(self, oLdap):
-
         # Unbind from server
         try:
             oLdap.unbind_s()
@@ -207,12 +210,7 @@
 
 
     def __ldapDstBind(self):
-        global \
-            UPWDCHG_PLUGIN_LDAP_DST_URI, \
-            UPWDCHG_PLUGIN_LDAP_DST_ADMIN_DN, \
-            UPWDCHG_PLUGIN_LDAP_DST_ADMIN_PWD
-
-        # Check parameters
+        # Check configuration
         if not UPWDCHG_PLUGIN_LDAP_DST_URI:
             self._DEBUG('Missing (destination LDAP) server address (URI)')
             self._EXIT_ERROR('Internal error; please contact your system administrator')
@@ -261,20 +259,14 @@
 
 
     def __ldapDstGetGroups(self, oLdap):
-        global \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_SEARCH_DN, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_SEARCH_SCOPE, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_SEARCH_FILTER, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTR_NAME
-
-        # Return variable
-        dGroups = dict()
-
-        # Check parameters
+        # Check configuration
         if not UPWDCHG_PLUGIN_LDAP_DST_GROUP_SEARCH_DN:
             self._DEBUG('Missing (destination LDAP) group search base (DN)')
             self._EXIT_ERROR('Internal error; please contact your system administrator')
 
+        # Return variable
+        dGroups = dict()
+
         # Retrieve groups
 
         # ... groups
@@ -286,7 +278,7 @@
                 attrlist=[UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTR_NAME], attrsonly=0
                 )
             for tLdapResult in lLdapResults:
-                dGroups[ tLdapResult[1][UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTR_NAME][0] ] = tLdapResult[0];
+                dGroups[ tLdapResult[1][UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTR_NAME][0].decode('utf-8') ] = tLdapResult[0];
             self._DEBUG('Successfully retrieved groups from (destination LDAP) server:\n%s' % str(dGroups), TokenPlugin.DEBUG_TRACE)
         except Exception as e:
             self._DEBUG('Failed to retrieve groups from (destination LDAP) server; %s' % str(e))
@@ -297,29 +289,23 @@
 
 
     def __ldapDstCreateGroup(self, oLdapDst, sGroupname, oLdapSrc, sGroupDnSrc):
-        global \
-            UPWDCHG_PLUGIN_DRYRUN, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_CRITICAL, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_CLASSES, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTRS
-
         # Create group
 
         # ... populate "custom" attributes
         dAttrsSrc = self.__ldapSrcGetAttributes(oLdapSrc, sGroupDnSrc)
         dAttrsDst = dict()
-        for sKeyDst in UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTRS.iterkeys():
+        for sKeyDst in UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTRS.keys():
             sAttr = UPWDCHG_PLUGIN_LDAP_DST_GROUP_ATTRS[sKeyDst]
             sAttr = sAttr.replace('%{GROUPNAME}', sGroupname)
-            for sKeySrc in dAttrsSrc.iterkeys():
-                sAttr = sAttr.replace('%%{LDAP:%s}' % sKeySrc, dAttrsSrc[sKeySrc][0])
+            for sKeySrc in dAttrsSrc.keys():
+                sAttr = sAttr.replace('%%{LDAP:%s}' % sKeySrc, dAttrsSrc[sKeySrc][0].decode('utf-8'))
             sAttr = self.__reLdapVariables.sub('', sAttr)
-            dAttrsDst[sKeyDst] = sAttr
+            dAttrsDst[sKeyDst] = sAttr.encode('utf-8')
 
         # ... populate "system" attributes
         sGroupDn = dAttrsDst['dn']
         dAttrsDst.pop('dn', None)
-        dAttrsDst['objectClass'] = UPWDCHG_PLUGIN_LDAP_DST_GROUP_CLASSES
+        dAttrsDst['objectClass'] = [i if isinstance(i, bytes) else i.encode('utf-8') for i in UPWDCHG_PLUGIN_LDAP_DST_GROUP_CLASSES]
 
         # ... create group
         if UPWDCHG_PLUGIN_DRYRUN:
@@ -338,10 +324,6 @@
 
 
     def __ldapDstDeleteGroup(self, oLdap, sGroupDn):
-        global \
-            UPWDCHG_PLUGIN_DRYRUN, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_CRITICAL
-
         # Delete group
         if UPWDCHG_PLUGIN_DRYRUN:
             self._DEBUG('DRY-RUN! NOT deleting (destination LDAP) group: %s' % sGroupDn, TokenPlugin.DEBUG_WARNING)
@@ -358,7 +340,6 @@
 
 
     def __ldapDstUnbind(self, oLdap):
-
         # Unbind from server
         try:
             oLdap.unbind_s()
@@ -368,10 +349,6 @@
 
 
     def process(self):
-        global \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_CREATE, \
-            UPWDCHG_PLUGIN_LDAP_DST_GROUP_DELETE
-
         # Synchronize groups
 
         # ... bind
@@ -397,5 +374,6 @@
         # Done
         self._EXIT_OK('Groups successfully synchronized')
 
+
 # Process
 SynchGroupsLdap().process()
