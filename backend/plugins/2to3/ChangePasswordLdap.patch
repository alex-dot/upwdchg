--- 2/ChangePasswordLdap
+++ 3/ChangePasswordLdap
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- mode:python; tab-width:4; c-basic-offset:4; intent-tabs-mode:nil; -*-
 # ex: filetype=python tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent smartindent
 
@@ -24,6 +24,18 @@
-# Modules
-# ... deb: python-ldap
+#------------------------------------------------------------------------------
+# DEPENDENCIES
+#------------------------------------------------------------------------------
+
+# UPwdChg
 from UPwdChg import TokenPlugin
+
+# Extra
+# ... deb: python3-ldap
 import ldap
 
-# Parameters
+
+#------------------------------------------------------------------------------
+# CONFIGURATION
+#------------------------------------------------------------------------------
+
+# UPwdChg
+UPWDCHG_PLUGIN_NAME='ChangePasswordLdap'
@@ -43,19 +54,13 @@
-# Plugin
+
+#------------------------------------------------------------------------------
+# PLUGIN
+#------------------------------------------------------------------------------
+
 class ChangePasswordLdap(TokenPlugin):
 
     def __init__(self):
-        global UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG
-        TokenPlugin.__init__(self, 'ChangePasswordLdap', UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
+        TokenPlugin.__init__(self, UPWDCHG_PLUGIN_NAME, UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
 
-    def process(self):
-        global \
-            UPWDCHG_PLUGIN_DRYRUN, \
-            UPWDCHG_PLUGIN_LDAP_URI, \
-            UPWDCHG_PLUGIN_LDAP_ADMIN_DN, \
-            UPWDCHG_PLUGIN_LDAP_ADMIN_PWD, \
-            UPWDCHG_PLUGIN_LDAP_USER_DN, \
-            UPWDCHG_PLUGIN_LDAP_USER_SEARCH_DN, \
-            UPWDCHG_PLUGIN_LDAP_USER_SEARCH_SCOPE, \
-            UPWDCHG_PLUGIN_LDAP_USER_SEARCH_FILTER
 
-        # Check parameters
+    def process(self):
+        # Check configuration
@@ -71,10 +76,10 @@
 
         # Get token (data)
         oToken = self._getToken()
-        sUsername = oToken['username'].encode('utf-8')
-        sPasswordNew = oToken['password-new'].encode('utf-8')
+        sUsername = oToken['username']
+        sPasswordNew = oToken['password-new']
         if 'password-old' in oToken.keys():
-            sPasswordOld = oToken['password-old'].encode('utf-8')
+            sPasswordOld = oToken['password-old']
         else:
             sPasswordOld = None
 
@@ -141,7 +146,7 @@
                     raise Exception('user not found: %s' % sUsername)
                 elif len(lLdapResults) > 1:
                     raise Exception('too many match: %s' % sUsername)
-                (sUserDn, dAttrs) = lLdapResults[0]
+                sUserDn = lLdapResults[0][0]
             else:
                 sUserDn = UPWDCHG_PLUGIN_LDAP_USER_DN.replace('%{USERNAME}', sUsername)
             self._DEBUG('Successfully retrieved user: %s' % sUserDn, TokenPlugin.DEBUG_TRACE)
@@ -173,5 +178,6 @@
         # Done
         self._EXIT_OK('Password successfully changed')
 
+
 # Process
 ChangePasswordLdap().process()
