--- 2/CheckCredentialsLdap
+++ 3/CheckCredentialsLdap
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- mode:python; tab-width:4; c-basic-offset:4; intent-tabs-mode:nil; -*-
 # ex: filetype=python tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent smartindent
 
@@ -24,6 +24,18 @@
-# Modules
-# ... deb: python-ldap
+#------------------------------------------------------------------------------
+# DEPENDENCIES
+#------------------------------------------------------------------------------
+
+# UPwdChg
 from UPwdChg import TokenPlugin
+
+# Extra
+# ... deb: python3-ldap
 import ldap
 
-# Parameters
+
+#------------------------------------------------------------------------------
+# CONFIGURATION
+#------------------------------------------------------------------------------
+
+# UPwdChg
+UPWDCHG_PLUGIN_NAME='CheckCredentialsLdap'
@@ -37,13 +49,13 @@
-# Plugin
+
+#------------------------------------------------------------------------------
+# PLUGIN
+#------------------------------------------------------------------------------
+
 class CheckCredentialsLdap(TokenPlugin):
 
     def __init__(self):
-        global UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG
-        TokenPlugin.__init__(self, 'CheckCredentialsLdap', UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
+        TokenPlugin.__init__(self, UPWDCHG_PLUGIN_NAME, UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
 
-    def process(self):
-        global \
-            UPWDCHG_PLUGIN_LDAP_URI, \
-            UPWDCHG_PLUGIN_LDAP_USER_DN
 
-        # Check parameters
+    def process(self):
+        # Check configuration
@@ -56,11 +67,11 @@
 
         # Get token (data)
         oToken = self._getToken()
-        sUsername = oToken['username'].encode('utf-8')
+        sUsername = oToken['username']
         if 'password-old' not in oToken.keys():
             self._DEBUG('Token has no "password-old" attribute')
             self._EXIT_ERROR('Internal error; please contact your system administrator')
-        sPasswordOld = oToken['password-old'].encode('utf-8')
+        sPasswordOld = oToken['password-old']
 
         # Check LDAP credential
 
@@ -95,5 +106,6 @@
         # Done
         self._EXIT_OK('Valid credentials')
 
+
 # Process
 CheckCredentialsLdap().process()
