--- 2/CreateAccountKrb5
+++ 3/CreateAccountKrb5
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- mode:python; tab-width:4; c-basic-offset:4; intent-tabs-mode:nil; -*-
 # ex: filetype=python tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent smartindent
 
@@ -24,5 +24,18 @@
-# Modules
+#------------------------------------------------------------------------------
+# DEPENDENCIES
+#------------------------------------------------------------------------------
+
+# UPwdChg
 from UPwdChg import TokenPlugin
+
+# Standard
 import subprocess as SP
+import sys
+
 
-# Parameters
+#------------------------------------------------------------------------------
+# CONFIGURATION
+#------------------------------------------------------------------------------
+
+# UPwdChg
+UPWDCHG_PLUGIN_NAME='CreateAccountKrb5'
@@ -39,16 +52,17 @@
-# Plugin
+
+#------------------------------------------------------------------------------
+# PLUGIN
+#------------------------------------------------------------------------------
+
 class CreateAccountKrb5(TokenPlugin):
 
     def __init__(self):
-        global UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG
-        TokenPlugin.__init__(self, 'CreateAccountKrb5', UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
+        TokenPlugin.__init__(self, UPWDCHG_PLUGIN_NAME, UPWDCHG_PLUGIN_CRITICAL, UPWDCHG_PLUGIN_DEBUG)
+
+
+    def __escape(self, _s):
+        return _s.replace('"', '""').replace('\'', '\'"\'"\'')
 
-    def process(self):
-        global \
-            UPWDCHG_PLUGIN_DRYRUN, \
-            UPWDCHG_PLUGIN_KRB5_PRINCIPAL, \
-            UPWDCHG_PLUGIN_KRB5_ADD_USER_DN, \
-            UPWDCHG_PLUGIN_KRB5_ADD_OPTIONS, \
-            UPWDCHG_PLUGIN_KRB5_ADMSRV
 
-        # Check parameters
+    def process(self):
+        # Check configuration
@@ -64,8 +73,8 @@
 
         # Get token (data)
         oToken = self._getToken()
-        sUsername = oToken['username'].encode('utf-8')
-        sPasswordNew = oToken['password-new'].encode('utf-8')
+        sUsername = oToken['username']
+        sPasswordNew = oToken['password-new']
 
         # Process token data
 
@@ -75,12 +89,15 @@
         # ... Check principal existency
         bPrincipalExists = True
         try:
-            lCommand = [ 'kadmin.local', '-q', "'get_principal -terse \"%s\"'" % sPrincipal.replace('"', '""') ]
+            lCommand = [ 'kadmin.local', '-q', "'get_principal -terse \"%s\"'" % self.__escape(sPrincipal) ]
             if UPWDCHG_PLUGIN_KRB5_ADMSRV is not None:
-                lCommand = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--', ' '.join(lCommand) ]
+                lCommand_ssh = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--' ]
+                lCommand_ssh.extend(lCommand)
+                lCommand = lCommand_ssh
             oPopen = SP.Popen(lCommand, stdout=SP.PIPE, stderr=SP.PIPE)
-            (sStdOut, sStdErr) = oPopen.communicate()
-            if oPopen.returncode != 0 or sStdErr:
+            (byStdOut, byStdErr) = oPopen.communicate()
+            if oPopen.returncode != 0 or byStdErr:
+                sStdErr = byStdErr.decode(sys.stderr.encoding)
                 if sStdErr.lower().find('principal does not exist') < 0:
                     raise Exception(sStdErr)
                 bPrincipalExists = False
@@ -96,13 +113,15 @@
         try:
             if bPrincipalExists:
                 if not UPWDCHG_PLUGIN_DRYRUN:
-                    lCommand = [ 'kadmin.local', '-q', "'change_password -pw \"%s\" \"%s\"'" % (sPasswordNew.replace('"', '""'), sPrincipal.replace('"', '""')) ]
+                    lCommand = [ 'kadmin.local', '-q', "'change_password -pw \"%s\" \"%s\"'" % (self.__escape(sPasswordNew), self.__escape(sPrincipal)) ]
                     if UPWDCHG_PLUGIN_KRB5_ADMSRV is not None:
-                        lCommand = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--', ' '.join(lCommand) ]
+                        lCommand_ssh = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--' ]
+                        lCommand_ssh.extend(lCommand)
+                        lCommand = lCommand_ssh
                     oPopen = SP.Popen(lCommand, stdout=SP.PIPE, stderr=SP.PIPE)
-                    (sStdOut, sStdErr) = oPopen.communicate()
-                    if oPopen.returncode != 0 or sStdErr:
-                        raise Exception(sStdErr)
+                    (byStdOut, byStdErr) = oPopen.communicate()
+                    if oPopen.returncode != 0 or byStdErr:
+                        raise Exception(byStdErr.decode(sys.stderr.encoding))
                     self._DEBUG('Successfully changed password for principal: %s' % sPrincipal, TokenPlugin.DEBUG_INFO)
                 else:
                     self._DEBUG('DRY-RUN! NOT changing password for principal: %s' % sPrincipal, TokenPlugin.DEBUG_WARNING)
@@ -117,13 +136,15 @@
                     sUserDn = UPWDCHG_PLUGIN_KRB5_ADD_USER_DN.replace('%{USERNAME}', sUsername)
                     self._DEBUG('Creating principal (DN): %s (%s)' % (sPrincipal, sUserDn), TokenPlugin.DEBUG_TRACE)
                     sOptions = UPWDCHG_PLUGIN_KRB5_ADD_OPTIONS
-                    lCommand = [ 'kadmin.local', '-q', "'add_principal -x dn=\"%s\" -pw \"%s\" %s \"%s\"'" % (sUserDn.replace('"', '""'), sPasswordNew.replace('"', '""'), sOptions, sPrincipal.replace('"', '""')) ]
+                    lCommand = [ 'kadmin.local', '-q', "'add_principal -x dn=\"%s\" -pw \"%s\" %s \"%s\"'" % (self.__escape(sUserDn), self.__escape(sPasswordNew), sOptions, self.__escape(sPrincipal)) ]
                     if UPWDCHG_PLUGIN_KRB5_ADMSRV is not None:
-                        lCommand = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--', ' '.join(lCommand) ]
+                        lCommand_ssh = [ 'ssh', '-x', UPWDCHG_PLUGIN_KRB5_ADMSRV, '--' ]
+                        lCommand_ssh.extend(lCommand)
+                        lCommand = lCommand_ssh
                     oPopen = SP.Popen(lCommand, stdout=SP.PIPE, stderr=SP.PIPE)
-                    (sStdOut, sStdErr) = oPopen.communicate()
-                    if oPopen.returncode != 0 or sStdErr:
-                        raise Exception(sStdErr)
+                    (byStdOut, byStdErr) = oPopen.communicate()
+                    if oPopen.returncode != 0 or byStdErr:
+                        raise Exception(byStdErr.decode(sys.stderr.encoding))
                     self._DEBUG('Successfully created principal: %s' % sPrincipal, TokenPlugin.DEBUG_INFO)
                 else:
                     self._DEBUG('DRY-RUN! NOT creating principal: %s' % sPrincipal, TokenPlugin.DEBUG_WARNING)
@@ -137,5 +147,6 @@
         else:
             self._EXIT_OK('Account successfully created')
 
+
 # Process
 CreateAccountKrb5().process()
